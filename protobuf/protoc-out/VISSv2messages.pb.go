// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: VISSv2messages.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageMethod int32

const (
	MessageMethod_GET         MessageMethod = 0
	MessageMethod_SET         MessageMethod = 1
	MessageMethod_SUBSCRIBE   MessageMethod = 2
	MessageMethod_UNSUBSCRIBE MessageMethod = 3
)

// Enum value maps for MessageMethod.
var (
	MessageMethod_name = map[int32]string{
		0: "GET",
		1: "SET",
		2: "SUBSCRIBE",
		3: "UNSUBSCRIBE",
	}
	MessageMethod_value = map[string]int32{
		"GET":         0,
		"SET":         1,
		"SUBSCRIBE":   2,
		"UNSUBSCRIBE": 3,
	}
)

func (x MessageMethod) Enum() *MessageMethod {
	p := new(MessageMethod)
	*p = x
	return p
}

func (x MessageMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_VISSv2messages_proto_enumTypes[0].Descriptor()
}

func (MessageMethod) Type() protoreflect.EnumType {
	return &file_VISSv2messages_proto_enumTypes[0]
}

func (x MessageMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageMethod.Descriptor instead.
func (MessageMethod) EnumDescriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{0}
}

type MessageType int32

const (
	MessageType_REQUEST      MessageType = 0
	MessageType_RESPONSE     MessageType = 1
	MessageType_NOTIFICATION MessageType = 2
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "REQUEST",
		1: "RESPONSE",
		2: "NOTIFICATION",
	}
	MessageType_value = map[string]int32{
		"REQUEST":      0,
		"RESPONSE":     1,
		"NOTIFICATION": 2,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_VISSv2messages_proto_enumTypes[1].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_VISSv2messages_proto_enumTypes[1]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{1}
}

type ResponseStatus int32

const (
	ResponseStatus_SUCCESS ResponseStatus = 0
	ResponseStatus_ERROR   ResponseStatus = 1
)

// Enum value maps for ResponseStatus.
var (
	ResponseStatus_name = map[int32]string{
		0: "SUCCESS",
		1: "ERROR",
	}
	ResponseStatus_value = map[string]int32{
		"SUCCESS": 0,
		"ERROR":   1,
	}
)

func (x ResponseStatus) Enum() *ResponseStatus {
	p := new(ResponseStatus)
	*p = x
	return p
}

func (x ResponseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_VISSv2messages_proto_enumTypes[2].Descriptor()
}

func (ResponseStatus) Type() protoreflect.EnumType {
	return &file_VISSv2messages_proto_enumTypes[2]
}

func (x ResponseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseStatus.Descriptor instead.
func (ResponseStatus) EnumDescriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{2}
}

type FilterExpressions_FilterExpression_FilterType int32

const (
	FilterExpressions_FilterExpression_PATHS            FilterExpressions_FilterExpression_FilterType = 0
	FilterExpressions_FilterExpression_TIMEBASED        FilterExpressions_FilterExpression_FilterType = 1
	FilterExpressions_FilterExpression_RANGE            FilterExpressions_FilterExpression_FilterType = 2
	FilterExpressions_FilterExpression_CHANGE           FilterExpressions_FilterExpression_FilterType = 3
	FilterExpressions_FilterExpression_CURVELOG         FilterExpressions_FilterExpression_FilterType = 4
	FilterExpressions_FilterExpression_HISTORY          FilterExpressions_FilterExpression_FilterType = 5
	FilterExpressions_FilterExpression_STATIC_METADATA  FilterExpressions_FilterExpression_FilterType = 6
	FilterExpressions_FilterExpression_DYNAMIC_METADATA FilterExpressions_FilterExpression_FilterType = 7
)

// Enum value maps for FilterExpressions_FilterExpression_FilterType.
var (
	FilterExpressions_FilterExpression_FilterType_name = map[int32]string{
		0: "PATHS",
		1: "TIMEBASED",
		2: "RANGE",
		3: "CHANGE",
		4: "CURVELOG",
		5: "HISTORY",
		6: "STATIC_METADATA",
		7: "DYNAMIC_METADATA",
	}
	FilterExpressions_FilterExpression_FilterType_value = map[string]int32{
		"PATHS":            0,
		"TIMEBASED":        1,
		"RANGE":            2,
		"CHANGE":           3,
		"CURVELOG":         4,
		"HISTORY":          5,
		"STATIC_METADATA":  6,
		"DYNAMIC_METADATA": 7,
	}
)

func (x FilterExpressions_FilterExpression_FilterType) Enum() *FilterExpressions_FilterExpression_FilterType {
	p := new(FilterExpressions_FilterExpression_FilterType)
	*p = x
	return p
}

func (x FilterExpressions_FilterExpression_FilterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterExpressions_FilterExpression_FilterType) Descriptor() protoreflect.EnumDescriptor {
	return file_VISSv2messages_proto_enumTypes[3].Descriptor()
}

func (FilterExpressions_FilterExpression_FilterType) Type() protoreflect.EnumType {
	return &file_VISSv2messages_proto_enumTypes[3]
}

func (x FilterExpressions_FilterExpression_FilterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterType.Descriptor instead.
func (FilterExpressions_FilterExpression_FilterType) EnumDescriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{1, 0, 0}
}

type ErrorResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number  string  `protobuf:"bytes,1,opt,name=Number,proto3" json:"Number,omitempty"`
	Reason  *string `protobuf:"bytes,2,opt,name=Reason,proto3,oneof" json:"Reason,omitempty"`
	Message *string `protobuf:"bytes,3,opt,name=Message,proto3,oneof" json:"Message,omitempty"`
}

func (x *ErrorResponseMessage) Reset() {
	*x = ErrorResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponseMessage) ProtoMessage() {}

func (x *ErrorResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponseMessage.ProtoReflect.Descriptor instead.
func (*ErrorResponseMessage) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorResponseMessage) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *ErrorResponseMessage) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *ErrorResponseMessage) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type FilterExpressions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterExp []*FilterExpressions_FilterExpression `protobuf:"bytes,1,rep,name=FilterExp,proto3" json:"FilterExp,omitempty"`
}

func (x *FilterExpressions) Reset() {
	*x = FilterExpressions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions) ProtoMessage() {}

func (x *FilterExpressions) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions.ProtoReflect.Descriptor instead.
func (*FilterExpressions) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{1}
}

func (x *FilterExpressions) GetFilterExp() []*FilterExpressions_FilterExpression {
	if x != nil {
		return x.FilterExp
	}
	return nil
}

type DataPackages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DataPackages_DataPackage `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *DataPackages) Reset() {
	*x = DataPackages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPackages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPackages) ProtoMessage() {}

func (x *DataPackages) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPackages.ProtoReflect.Descriptor instead.
func (*DataPackages) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{2}
}

func (x *DataPackages) GetData() []*DataPackages_DataPackage {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MType    MessageType                 `protobuf:"varint,1,opt,name=MType,proto3,enum=protobufMessages.MessageType" json:"MType,omitempty"`
	Request  *GetMessage_RequestMessage  `protobuf:"bytes,2,opt,name=Request,proto3,oneof" json:"Request,omitempty"`
	Response *GetMessage_ResponseMessage `protobuf:"bytes,3,opt,name=Response,proto3,oneof" json:"Response,omitempty"`
}

func (x *GetMessage) Reset() {
	*x = GetMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessage) ProtoMessage() {}

func (x *GetMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessage.ProtoReflect.Descriptor instead.
func (*GetMessage) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{3}
}

func (x *GetMessage) GetMType() MessageType {
	if x != nil {
		return x.MType
	}
	return MessageType_REQUEST
}

func (x *GetMessage) GetRequest() *GetMessage_RequestMessage {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *GetMessage) GetResponse() *GetMessage_ResponseMessage {
	if x != nil {
		return x.Response
	}
	return nil
}

type SetMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MType    MessageType                 `protobuf:"varint,1,opt,name=MType,proto3,enum=protobufMessages.MessageType" json:"MType,omitempty"`
	Request  *SetMessage_RequestMessage  `protobuf:"bytes,2,opt,name=Request,proto3,oneof" json:"Request,omitempty"`
	Response *SetMessage_ResponseMessage `protobuf:"bytes,3,opt,name=Response,proto3,oneof" json:"Response,omitempty"`
}

func (x *SetMessage) Reset() {
	*x = SetMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMessage) ProtoMessage() {}

func (x *SetMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMessage.ProtoReflect.Descriptor instead.
func (*SetMessage) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{4}
}

func (x *SetMessage) GetMType() MessageType {
	if x != nil {
		return x.MType
	}
	return MessageType_REQUEST
}

func (x *SetMessage) GetRequest() *SetMessage_RequestMessage {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *SetMessage) GetResponse() *SetMessage_ResponseMessage {
	if x != nil {
		return x.Response
	}
	return nil
}

type SubscribeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MType        MessageType                           `protobuf:"varint,1,opt,name=MType,proto3,enum=protobufMessages.MessageType" json:"MType,omitempty"`
	Request      *SubscribeMessage_RequestMessage      `protobuf:"bytes,2,opt,name=Request,proto3,oneof" json:"Request,omitempty"`
	Response     *SubscribeMessage_ResponseMessage     `protobuf:"bytes,3,opt,name=Response,proto3,oneof" json:"Response,omitempty"`
	Notification *SubscribeMessage_NotificationMessage `protobuf:"bytes,4,opt,name=Notification,proto3,oneof" json:"Notification,omitempty"`
}

func (x *SubscribeMessage) Reset() {
	*x = SubscribeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeMessage) ProtoMessage() {}

func (x *SubscribeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeMessage.ProtoReflect.Descriptor instead.
func (*SubscribeMessage) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeMessage) GetMType() MessageType {
	if x != nil {
		return x.MType
	}
	return MessageType_REQUEST
}

func (x *SubscribeMessage) GetRequest() *SubscribeMessage_RequestMessage {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *SubscribeMessage) GetResponse() *SubscribeMessage_ResponseMessage {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *SubscribeMessage) GetNotification() *SubscribeMessage_NotificationMessage {
	if x != nil {
		return x.Notification
	}
	return nil
}

type UnSubscribeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MType    MessageType                         `protobuf:"varint,1,opt,name=MType,proto3,enum=protobufMessages.MessageType" json:"MType,omitempty"`
	Request  *UnSubscribeMessage_RequestMessage  `protobuf:"bytes,2,opt,name=Request,proto3,oneof" json:"Request,omitempty"`
	Response *UnSubscribeMessage_ResponseMessage `protobuf:"bytes,3,opt,name=Response,proto3,oneof" json:"Response,omitempty"`
}

func (x *UnSubscribeMessage) Reset() {
	*x = UnSubscribeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnSubscribeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnSubscribeMessage) ProtoMessage() {}

func (x *UnSubscribeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnSubscribeMessage.ProtoReflect.Descriptor instead.
func (*UnSubscribeMessage) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{6}
}

func (x *UnSubscribeMessage) GetMType() MessageType {
	if x != nil {
		return x.MType
	}
	return MessageType_REQUEST
}

func (x *UnSubscribeMessage) GetRequest() *UnSubscribeMessage_RequestMessage {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *UnSubscribeMessage) GetResponse() *UnSubscribeMessage_ResponseMessage {
	if x != nil {
		return x.Response
	}
	return nil
}

type ProtobufMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method      MessageMethod       `protobuf:"varint,1,opt,name=Method,proto3,enum=protobufMessages.MessageMethod" json:"Method,omitempty"`
	Get         *GetMessage         `protobuf:"bytes,2,opt,name=Get,proto3,oneof" json:"Get,omitempty"`
	Set         *SetMessage         `protobuf:"bytes,3,opt,name=Set,proto3,oneof" json:"Set,omitempty"`
	Subscribe   *SubscribeMessage   `protobuf:"bytes,4,opt,name=Subscribe,proto3,oneof" json:"Subscribe,omitempty"`
	UnSubscribe *UnSubscribeMessage `protobuf:"bytes,5,opt,name=UnSubscribe,proto3,oneof" json:"UnSubscribe,omitempty"`
}

func (x *ProtobufMessage) Reset() {
	*x = ProtobufMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtobufMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtobufMessage) ProtoMessage() {}

func (x *ProtobufMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtobufMessage.ProtoReflect.Descriptor instead.
func (*ProtobufMessage) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{7}
}

func (x *ProtobufMessage) GetMethod() MessageMethod {
	if x != nil {
		return x.Method
	}
	return MessageMethod_GET
}

func (x *ProtobufMessage) GetGet() *GetMessage {
	if x != nil {
		return x.Get
	}
	return nil
}

func (x *ProtobufMessage) GetSet() *SetMessage {
	if x != nil {
		return x.Set
	}
	return nil
}

func (x *ProtobufMessage) GetSubscribe() *SubscribeMessage {
	if x != nil {
		return x.Subscribe
	}
	return nil
}

func (x *ProtobufMessage) GetUnSubscribe() *UnSubscribeMessage {
	if x != nil {
		return x.UnSubscribe
	}
	return nil
}

type FilterExpressions_FilterExpression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FType FilterExpressions_FilterExpression_FilterType   `protobuf:"varint,1,opt,name=FType,proto3,enum=protobufMessages.FilterExpressions_FilterExpression_FilterType" json:"FType,omitempty"`
	Value *FilterExpressions_FilterExpression_FilterValue `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *FilterExpressions_FilterExpression) Reset() {
	*x = FilterExpressions_FilterExpression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{1, 0}
}

func (x *FilterExpressions_FilterExpression) GetFType() FilterExpressions_FilterExpression_FilterType {
	if x != nil {
		return x.FType
	}
	return FilterExpressions_FilterExpression_PATHS
}

func (x *FilterExpressions_FilterExpression) GetValue() *FilterExpressions_FilterExpression_FilterValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type FilterExpressions_FilterExpression_FilterValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValuePaths           *FilterExpressions_FilterExpression_FilterValue_PathsValue           `protobuf:"bytes,1,opt,name=ValuePaths,proto3,oneof" json:"ValuePaths,omitempty"`
	ValueTimebased       *FilterExpressions_FilterExpression_FilterValue_TimebasedValue       `protobuf:"bytes,2,opt,name=ValueTimebased,proto3,oneof" json:"ValueTimebased,omitempty"`
	ValueRange           []*FilterExpressions_FilterExpression_FilterValue_RangeValue         `protobuf:"bytes,3,rep,name=ValueRange,proto3" json:"ValueRange,omitempty"`
	ValueChange          *FilterExpressions_FilterExpression_FilterValue_ChangeValue          `protobuf:"bytes,4,opt,name=ValueChange,proto3,oneof" json:"ValueChange,omitempty"`
	ValueCurvelog        *FilterExpressions_FilterExpression_FilterValue_CurvelogValue        `protobuf:"bytes,5,opt,name=ValueCurvelog,proto3,oneof" json:"ValueCurvelog,omitempty"`
	ValueHistory         *FilterExpressions_FilterExpression_FilterValue_HistoryValue         `protobuf:"bytes,6,opt,name=ValueHistory,proto3,oneof" json:"ValueHistory,omitempty"`
	ValueStaticMetadata  *FilterExpressions_FilterExpression_FilterValue_StaticMetadataValue  `protobuf:"bytes,7,opt,name=ValueStaticMetadata,proto3,oneof" json:"ValueStaticMetadata,omitempty"`
	ValueDynamicMetadata *FilterExpressions_FilterExpression_FilterValue_DynamicMetadataValue `protobuf:"bytes,8,opt,name=ValueDynamicMetadata,proto3,oneof" json:"ValueDynamicMetadata,omitempty"`
}

func (x *FilterExpressions_FilterExpression_FilterValue) Reset() {
	*x = FilterExpressions_FilterExpression_FilterValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression_FilterValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression_FilterValue) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression_FilterValue) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterValue.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression_FilterValue) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *FilterExpressions_FilterExpression_FilterValue) GetValuePaths() *FilterExpressions_FilterExpression_FilterValue_PathsValue {
	if x != nil {
		return x.ValuePaths
	}
	return nil
}

func (x *FilterExpressions_FilterExpression_FilterValue) GetValueTimebased() *FilterExpressions_FilterExpression_FilterValue_TimebasedValue {
	if x != nil {
		return x.ValueTimebased
	}
	return nil
}

func (x *FilterExpressions_FilterExpression_FilterValue) GetValueRange() []*FilterExpressions_FilterExpression_FilterValue_RangeValue {
	if x != nil {
		return x.ValueRange
	}
	return nil
}

func (x *FilterExpressions_FilterExpression_FilterValue) GetValueChange() *FilterExpressions_FilterExpression_FilterValue_ChangeValue {
	if x != nil {
		return x.ValueChange
	}
	return nil
}

func (x *FilterExpressions_FilterExpression_FilterValue) GetValueCurvelog() *FilterExpressions_FilterExpression_FilterValue_CurvelogValue {
	if x != nil {
		return x.ValueCurvelog
	}
	return nil
}

func (x *FilterExpressions_FilterExpression_FilterValue) GetValueHistory() *FilterExpressions_FilterExpression_FilterValue_HistoryValue {
	if x != nil {
		return x.ValueHistory
	}
	return nil
}

func (x *FilterExpressions_FilterExpression_FilterValue) GetValueStaticMetadata() *FilterExpressions_FilterExpression_FilterValue_StaticMetadataValue {
	if x != nil {
		return x.ValueStaticMetadata
	}
	return nil
}

func (x *FilterExpressions_FilterExpression_FilterValue) GetValueDynamicMetadata() *FilterExpressions_FilterExpression_FilterValue_DynamicMetadataValue {
	if x != nil {
		return x.ValueDynamicMetadata
	}
	return nil
}

type FilterExpressions_FilterExpression_FilterValue_PathsValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelativePath []string `protobuf:"bytes,1,rep,name=RelativePath,proto3" json:"RelativePath,omitempty"`
}

func (x *FilterExpressions_FilterExpression_FilterValue_PathsValue) Reset() {
	*x = FilterExpressions_FilterExpression_FilterValue_PathsValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression_FilterValue_PathsValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression_FilterValue_PathsValue) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression_FilterValue_PathsValue) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterValue_PathsValue.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression_FilterValue_PathsValue) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{1, 0, 0, 0}
}

func (x *FilterExpressions_FilterExpression_FilterValue_PathsValue) GetRelativePath() []string {
	if x != nil {
		return x.RelativePath
	}
	return nil
}

type FilterExpressions_FilterExpression_FilterValue_TimebasedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period string `protobuf:"bytes,1,opt,name=Period,proto3" json:"Period,omitempty"`
}

func (x *FilterExpressions_FilterExpression_FilterValue_TimebasedValue) Reset() {
	*x = FilterExpressions_FilterExpression_FilterValue_TimebasedValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression_FilterValue_TimebasedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression_FilterValue_TimebasedValue) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression_FilterValue_TimebasedValue) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterValue_TimebasedValue.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression_FilterValue_TimebasedValue) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{1, 0, 0, 1}
}

func (x *FilterExpressions_FilterExpression_FilterValue_TimebasedValue) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

type FilterExpressions_FilterExpression_FilterValue_RangeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogicOperator string `protobuf:"bytes,1,opt,name=LogicOperator,proto3" json:"LogicOperator,omitempty"`
	Boundary      string `protobuf:"bytes,2,opt,name=Boundary,proto3" json:"Boundary,omitempty"`
}

func (x *FilterExpressions_FilterExpression_FilterValue_RangeValue) Reset() {
	*x = FilterExpressions_FilterExpression_FilterValue_RangeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression_FilterValue_RangeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression_FilterValue_RangeValue) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression_FilterValue_RangeValue) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterValue_RangeValue.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression_FilterValue_RangeValue) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{1, 0, 0, 2}
}

func (x *FilterExpressions_FilterExpression_FilterValue_RangeValue) GetLogicOperator() string {
	if x != nil {
		return x.LogicOperator
	}
	return ""
}

func (x *FilterExpressions_FilterExpression_FilterValue_RangeValue) GetBoundary() string {
	if x != nil {
		return x.Boundary
	}
	return ""
}

type FilterExpressions_FilterExpression_FilterValue_ChangeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogicOperator string `protobuf:"bytes,1,opt,name=LogicOperator,proto3" json:"LogicOperator,omitempty"`
	Diff          string `protobuf:"bytes,2,opt,name=Diff,proto3" json:"Diff,omitempty"`
}

func (x *FilterExpressions_FilterExpression_FilterValue_ChangeValue) Reset() {
	*x = FilterExpressions_FilterExpression_FilterValue_ChangeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression_FilterValue_ChangeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression_FilterValue_ChangeValue) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression_FilterValue_ChangeValue) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterValue_ChangeValue.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression_FilterValue_ChangeValue) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{1, 0, 0, 3}
}

func (x *FilterExpressions_FilterExpression_FilterValue_ChangeValue) GetLogicOperator() string {
	if x != nil {
		return x.LogicOperator
	}
	return ""
}

func (x *FilterExpressions_FilterExpression_FilterValue_ChangeValue) GetDiff() string {
	if x != nil {
		return x.Diff
	}
	return ""
}

type FilterExpressions_FilterExpression_FilterValue_CurvelogValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxErr  string `protobuf:"bytes,1,opt,name=MaxErr,proto3" json:"MaxErr,omitempty"`
	BufSize string `protobuf:"bytes,2,opt,name=BufSize,proto3" json:"BufSize,omitempty"`
}

func (x *FilterExpressions_FilterExpression_FilterValue_CurvelogValue) Reset() {
	*x = FilterExpressions_FilterExpression_FilterValue_CurvelogValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression_FilterValue_CurvelogValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression_FilterValue_CurvelogValue) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression_FilterValue_CurvelogValue) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterValue_CurvelogValue.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression_FilterValue_CurvelogValue) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{1, 0, 0, 4}
}

func (x *FilterExpressions_FilterExpression_FilterValue_CurvelogValue) GetMaxErr() string {
	if x != nil {
		return x.MaxErr
	}
	return ""
}

func (x *FilterExpressions_FilterExpression_FilterValue_CurvelogValue) GetBufSize() string {
	if x != nil {
		return x.BufSize
	}
	return ""
}

type FilterExpressions_FilterExpression_FilterValue_HistoryValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimePeriod string `protobuf:"bytes,1,opt,name=TimePeriod,proto3" json:"TimePeriod,omitempty"` //ISO8601 period expression
}

func (x *FilterExpressions_FilterExpression_FilterValue_HistoryValue) Reset() {
	*x = FilterExpressions_FilterExpression_FilterValue_HistoryValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression_FilterValue_HistoryValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression_FilterValue_HistoryValue) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression_FilterValue_HistoryValue) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterValue_HistoryValue.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression_FilterValue_HistoryValue) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{1, 0, 0, 5}
}

func (x *FilterExpressions_FilterExpression_FilterValue_HistoryValue) GetTimePeriod() string {
	if x != nil {
		return x.TimePeriod
	}
	return ""
}

type FilterExpressions_FilterExpression_FilterValue_StaticMetadataValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tree string `protobuf:"bytes,1,opt,name=Tree,proto3" json:"Tree,omitempty"`
}

func (x *FilterExpressions_FilterExpression_FilterValue_StaticMetadataValue) Reset() {
	*x = FilterExpressions_FilterExpression_FilterValue_StaticMetadataValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression_FilterValue_StaticMetadataValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression_FilterValue_StaticMetadataValue) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression_FilterValue_StaticMetadataValue) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterValue_StaticMetadataValue.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression_FilterValue_StaticMetadataValue) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{1, 0, 0, 6}
}

func (x *FilterExpressions_FilterExpression_FilterValue_StaticMetadataValue) GetTree() string {
	if x != nil {
		return x.Tree
	}
	return ""
}

type FilterExpressions_FilterExpression_FilterValue_DynamicMetadataValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetadataDomain string `protobuf:"bytes,1,opt,name=MetadataDomain,proto3" json:"MetadataDomain,omitempty"`
}

func (x *FilterExpressions_FilterExpression_FilterValue_DynamicMetadataValue) Reset() {
	*x = FilterExpressions_FilterExpression_FilterValue_DynamicMetadataValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression_FilterValue_DynamicMetadataValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression_FilterValue_DynamicMetadataValue) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression_FilterValue_DynamicMetadataValue) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterValue_DynamicMetadataValue.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression_FilterValue_DynamicMetadataValue) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{1, 0, 0, 7}
}

func (x *FilterExpressions_FilterExpression_FilterValue_DynamicMetadataValue) GetMetadataDomain() string {
	if x != nil {
		return x.MetadataDomain
	}
	return ""
}

type DataPackages_DataPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path  *string                               `protobuf:"bytes,1,opt,name=Path,proto3,oneof" json:"Path,omitempty"`
	PathC *int32                                `protobuf:"varint,2,opt,name=PathC,proto3,oneof" json:"PathC,omitempty"`
	Dp    []*DataPackages_DataPackage_DataPoint `protobuf:"bytes,3,rep,name=Dp,proto3" json:"Dp,omitempty"`
}

func (x *DataPackages_DataPackage) Reset() {
	*x = DataPackages_DataPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPackages_DataPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPackages_DataPackage) ProtoMessage() {}

func (x *DataPackages_DataPackage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPackages_DataPackage.ProtoReflect.Descriptor instead.
func (*DataPackages_DataPackage) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{2, 0}
}

func (x *DataPackages_DataPackage) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *DataPackages_DataPackage) GetPathC() int32 {
	if x != nil && x.PathC != nil {
		return *x.PathC
	}
	return 0
}

func (x *DataPackages_DataPackage) GetDp() []*DataPackages_DataPackage_DataPoint {
	if x != nil {
		return x.Dp
	}
	return nil
}

type DataPackages_DataPackage_DataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string  `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
	Ts    *string `protobuf:"bytes,2,opt,name=Ts,proto3,oneof" json:"Ts,omitempty"`
	TsC   *int32  `protobuf:"varint,3,opt,name=TsC,proto3,oneof" json:"TsC,omitempty"`
}

func (x *DataPackages_DataPackage_DataPoint) Reset() {
	*x = DataPackages_DataPackage_DataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPackages_DataPackage_DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPackages_DataPackage_DataPoint) ProtoMessage() {}

func (x *DataPackages_DataPackage_DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPackages_DataPackage_DataPoint.ProtoReflect.Descriptor instead.
func (*DataPackages_DataPackage_DataPoint) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *DataPackages_DataPackage_DataPoint) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DataPackages_DataPackage_DataPoint) GetTs() string {
	if x != nil && x.Ts != nil {
		return *x.Ts
	}
	return ""
}

func (x *DataPackages_DataPackage_DataPoint) GetTsC() int32 {
	if x != nil && x.TsC != nil {
		return *x.TsC
	}
	return 0
}

type GetMessage_RequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path          string             `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Filter        *FilterExpressions `protobuf:"bytes,2,opt,name=Filter,proto3,oneof" json:"Filter,omitempty"`
	Authorization *string            `protobuf:"bytes,3,opt,name=Authorization,proto3,oneof" json:"Authorization,omitempty"`
	RequestId     *string            `protobuf:"bytes,4,opt,name=RequestId,proto3,oneof" json:"RequestId,omitempty"`
}

func (x *GetMessage_RequestMessage) Reset() {
	*x = GetMessage_RequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessage_RequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessage_RequestMessage) ProtoMessage() {}

func (x *GetMessage_RequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessage_RequestMessage.ProtoReflect.Descriptor instead.
func (*GetMessage_RequestMessage) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetMessage_RequestMessage) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetMessage_RequestMessage) GetFilter() *FilterExpressions {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetMessage_RequestMessage) GetAuthorization() string {
	if x != nil && x.Authorization != nil {
		return *x.Authorization
	}
	return ""
}

func (x *GetMessage_RequestMessage) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

type GetMessage_ResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          ResponseStatus                                     `protobuf:"varint,1,opt,name=Status,proto3,enum=protobufMessages.ResponseStatus" json:"Status,omitempty"`
	SuccessResponse *GetMessage_ResponseMessage_SuccessResponseMessage `protobuf:"bytes,2,opt,name=SuccessResponse,proto3,oneof" json:"SuccessResponse,omitempty"`
	ErrorResponse   *ErrorResponseMessage                              `protobuf:"bytes,3,opt,name=ErrorResponse,proto3,oneof" json:"ErrorResponse,omitempty"`
	RequestId       *string                                            `protobuf:"bytes,4,opt,name=RequestId,proto3,oneof" json:"RequestId,omitempty"`
	Ts              *string                                            `protobuf:"bytes,5,opt,name=Ts,proto3,oneof" json:"Ts,omitempty"`
	TsC             *int32                                             `protobuf:"varint,6,opt,name=TsC,proto3,oneof" json:"TsC,omitempty"`
}

func (x *GetMessage_ResponseMessage) Reset() {
	*x = GetMessage_ResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessage_ResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessage_ResponseMessage) ProtoMessage() {}

func (x *GetMessage_ResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessage_ResponseMessage.ProtoReflect.Descriptor instead.
func (*GetMessage_ResponseMessage) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{3, 1}
}

func (x *GetMessage_ResponseMessage) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_SUCCESS
}

func (x *GetMessage_ResponseMessage) GetSuccessResponse() *GetMessage_ResponseMessage_SuccessResponseMessage {
	if x != nil {
		return x.SuccessResponse
	}
	return nil
}

func (x *GetMessage_ResponseMessage) GetErrorResponse() *ErrorResponseMessage {
	if x != nil {
		return x.ErrorResponse
	}
	return nil
}

func (x *GetMessage_ResponseMessage) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *GetMessage_ResponseMessage) GetTs() string {
	if x != nil && x.Ts != nil {
		return *x.Ts
	}
	return ""
}

func (x *GetMessage_ResponseMessage) GetTsC() int32 {
	if x != nil && x.TsC != nil {
		return *x.TsC
	}
	return 0
}

type GetMessage_ResponseMessage_SuccessResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataPack *DataPackages `protobuf:"bytes,1,opt,name=DataPack,proto3,oneof" json:"DataPack,omitempty"`
	Metadata *string       `protobuf:"bytes,2,opt,name=Metadata,proto3,oneof" json:"Metadata,omitempty"` // replaces DataPack in static metadata and one dynamic metadata variant
}

func (x *GetMessage_ResponseMessage_SuccessResponseMessage) Reset() {
	*x = GetMessage_ResponseMessage_SuccessResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessage_ResponseMessage_SuccessResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessage_ResponseMessage_SuccessResponseMessage) ProtoMessage() {}

func (x *GetMessage_ResponseMessage_SuccessResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessage_ResponseMessage_SuccessResponseMessage.ProtoReflect.Descriptor instead.
func (*GetMessage_ResponseMessage_SuccessResponseMessage) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{3, 1, 0}
}

func (x *GetMessage_ResponseMessage_SuccessResponseMessage) GetDataPack() *DataPackages {
	if x != nil {
		return x.DataPack
	}
	return nil
}

func (x *GetMessage_ResponseMessage_SuccessResponseMessage) GetMetadata() string {
	if x != nil && x.Metadata != nil {
		return *x.Metadata
	}
	return ""
}

type SetMessage_RequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path          string  `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Value         string  `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	Authorization *string `protobuf:"bytes,3,opt,name=Authorization,proto3,oneof" json:"Authorization,omitempty"`
	RequestId     *string `protobuf:"bytes,4,opt,name=RequestId,proto3,oneof" json:"RequestId,omitempty"`
}

func (x *SetMessage_RequestMessage) Reset() {
	*x = SetMessage_RequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMessage_RequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMessage_RequestMessage) ProtoMessage() {}

func (x *SetMessage_RequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMessage_RequestMessage.ProtoReflect.Descriptor instead.
func (*SetMessage_RequestMessage) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{4, 0}
}

func (x *SetMessage_RequestMessage) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SetMessage_RequestMessage) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SetMessage_RequestMessage) GetAuthorization() string {
	if x != nil && x.Authorization != nil {
		return *x.Authorization
	}
	return ""
}

func (x *SetMessage_RequestMessage) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

type SetMessage_ResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        ResponseStatus        `protobuf:"varint,1,opt,name=Status,proto3,enum=protobufMessages.ResponseStatus" json:"Status,omitempty"`
	ErrorResponse *ErrorResponseMessage `protobuf:"bytes,2,opt,name=ErrorResponse,proto3,oneof" json:"ErrorResponse,omitempty"`
	RequestId     *string               `protobuf:"bytes,3,opt,name=RequestId,proto3,oneof" json:"RequestId,omitempty"`
	Ts            string                `protobuf:"bytes,4,opt,name=Ts,proto3" json:"Ts,omitempty"`
}

func (x *SetMessage_ResponseMessage) Reset() {
	*x = SetMessage_ResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMessage_ResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMessage_ResponseMessage) ProtoMessage() {}

func (x *SetMessage_ResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMessage_ResponseMessage.ProtoReflect.Descriptor instead.
func (*SetMessage_ResponseMessage) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{4, 1}
}

func (x *SetMessage_ResponseMessage) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_SUCCESS
}

func (x *SetMessage_ResponseMessage) GetErrorResponse() *ErrorResponseMessage {
	if x != nil {
		return x.ErrorResponse
	}
	return nil
}

func (x *SetMessage_ResponseMessage) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *SetMessage_ResponseMessage) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

type SubscribeMessage_RequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path          string             `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Filter        *FilterExpressions `protobuf:"bytes,2,opt,name=Filter,proto3,oneof" json:"Filter,omitempty"`
	Authorization *string            `protobuf:"bytes,3,opt,name=Authorization,proto3,oneof" json:"Authorization,omitempty"`
	RequestId     string             `protobuf:"bytes,4,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *SubscribeMessage_RequestMessage) Reset() {
	*x = SubscribeMessage_RequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeMessage_RequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeMessage_RequestMessage) ProtoMessage() {}

func (x *SubscribeMessage_RequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeMessage_RequestMessage.ProtoReflect.Descriptor instead.
func (*SubscribeMessage_RequestMessage) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{5, 0}
}

func (x *SubscribeMessage_RequestMessage) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SubscribeMessage_RequestMessage) GetFilter() *FilterExpressions {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *SubscribeMessage_RequestMessage) GetAuthorization() string {
	if x != nil && x.Authorization != nil {
		return *x.Authorization
	}
	return ""
}

func (x *SubscribeMessage_RequestMessage) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type SubscribeMessage_ResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status         ResponseStatus        `protobuf:"varint,1,opt,name=Status,proto3,enum=protobufMessages.ResponseStatus" json:"Status,omitempty"`
	ErrorResponse  *ErrorResponseMessage `protobuf:"bytes,2,opt,name=ErrorResponse,proto3,oneof" json:"ErrorResponse,omitempty"`
	SubscriptionId string                `protobuf:"bytes,3,opt,name=SubscriptionId,proto3" json:"SubscriptionId,omitempty"`
	RequestId      string                `protobuf:"bytes,4,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	Ts             string                `protobuf:"bytes,5,opt,name=Ts,proto3" json:"Ts,omitempty"`
}

func (x *SubscribeMessage_ResponseMessage) Reset() {
	*x = SubscribeMessage_ResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeMessage_ResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeMessage_ResponseMessage) ProtoMessage() {}

func (x *SubscribeMessage_ResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeMessage_ResponseMessage.ProtoReflect.Descriptor instead.
func (*SubscribeMessage_ResponseMessage) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{5, 1}
}

func (x *SubscribeMessage_ResponseMessage) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_SUCCESS
}

func (x *SubscribeMessage_ResponseMessage) GetErrorResponse() *ErrorResponseMessage {
	if x != nil {
		return x.ErrorResponse
	}
	return nil
}

func (x *SubscribeMessage_ResponseMessage) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *SubscribeMessage_ResponseMessage) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *SubscribeMessage_ResponseMessage) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

type SubscribeMessage_NotificationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId  string                                                       `protobuf:"bytes,1,opt,name=SubscriptionId,proto3" json:"SubscriptionId,omitempty"`
	Status          ResponseStatus                                               `protobuf:"varint,2,opt,name=Status,proto3,enum=protobufMessages.ResponseStatus" json:"Status,omitempty"`
	SuccessResponse *SubscribeMessage_NotificationMessage_SuccessResponseMessage `protobuf:"bytes,3,opt,name=SuccessResponse,proto3,oneof" json:"SuccessResponse,omitempty"`
	ErrorResponse   *ErrorResponseMessage                                        `protobuf:"bytes,4,opt,name=ErrorResponse,proto3,oneof" json:"ErrorResponse,omitempty"`
	Ts              *string                                                      `protobuf:"bytes,5,opt,name=Ts,proto3,oneof" json:"Ts,omitempty"`
	TsC             *int32                                                       `protobuf:"varint,6,opt,name=TsC,proto3,oneof" json:"TsC,omitempty"`
}

func (x *SubscribeMessage_NotificationMessage) Reset() {
	*x = SubscribeMessage_NotificationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeMessage_NotificationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeMessage_NotificationMessage) ProtoMessage() {}

func (x *SubscribeMessage_NotificationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeMessage_NotificationMessage.ProtoReflect.Descriptor instead.
func (*SubscribeMessage_NotificationMessage) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{5, 2}
}

func (x *SubscribeMessage_NotificationMessage) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *SubscribeMessage_NotificationMessage) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_SUCCESS
}

func (x *SubscribeMessage_NotificationMessage) GetSuccessResponse() *SubscribeMessage_NotificationMessage_SuccessResponseMessage {
	if x != nil {
		return x.SuccessResponse
	}
	return nil
}

func (x *SubscribeMessage_NotificationMessage) GetErrorResponse() *ErrorResponseMessage {
	if x != nil {
		return x.ErrorResponse
	}
	return nil
}

func (x *SubscribeMessage_NotificationMessage) GetTs() string {
	if x != nil && x.Ts != nil {
		return *x.Ts
	}
	return ""
}

func (x *SubscribeMessage_NotificationMessage) GetTsC() int32 {
	if x != nil && x.TsC != nil {
		return *x.TsC
	}
	return 0
}

type SubscribeMessage_NotificationMessage_SuccessResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataPack *DataPackages `protobuf:"bytes,1,opt,name=DataPack,proto3" json:"DataPack,omitempty"`
}

func (x *SubscribeMessage_NotificationMessage_SuccessResponseMessage) Reset() {
	*x = SubscribeMessage_NotificationMessage_SuccessResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeMessage_NotificationMessage_SuccessResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeMessage_NotificationMessage_SuccessResponseMessage) ProtoMessage() {}

func (x *SubscribeMessage_NotificationMessage_SuccessResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeMessage_NotificationMessage_SuccessResponseMessage.ProtoReflect.Descriptor instead.
func (*SubscribeMessage_NotificationMessage_SuccessResponseMessage) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{5, 2, 0}
}

func (x *SubscribeMessage_NotificationMessage_SuccessResponseMessage) GetDataPack() *DataPackages {
	if x != nil {
		return x.DataPack
	}
	return nil
}

type UnSubscribeMessage_RequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId string  `protobuf:"bytes,1,opt,name=SubscriptionId,proto3" json:"SubscriptionId,omitempty"`
	RequestId      *string `protobuf:"bytes,2,opt,name=RequestId,proto3,oneof" json:"RequestId,omitempty"`
}

func (x *UnSubscribeMessage_RequestMessage) Reset() {
	*x = UnSubscribeMessage_RequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnSubscribeMessage_RequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnSubscribeMessage_RequestMessage) ProtoMessage() {}

func (x *UnSubscribeMessage_RequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnSubscribeMessage_RequestMessage.ProtoReflect.Descriptor instead.
func (*UnSubscribeMessage_RequestMessage) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{6, 0}
}

func (x *UnSubscribeMessage_RequestMessage) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *UnSubscribeMessage_RequestMessage) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

type UnSubscribeMessage_ResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId string                `protobuf:"bytes,1,opt,name=SubscriptionId,proto3" json:"SubscriptionId,omitempty"`
	Status         ResponseStatus        `protobuf:"varint,2,opt,name=Status,proto3,enum=protobufMessages.ResponseStatus" json:"Status,omitempty"`
	ErrorResponse  *ErrorResponseMessage `protobuf:"bytes,3,opt,name=ErrorResponse,proto3,oneof" json:"ErrorResponse,omitempty"`
	RequestId      *string               `protobuf:"bytes,4,opt,name=RequestId,proto3,oneof" json:"RequestId,omitempty"`
	Ts             string                `protobuf:"bytes,5,opt,name=Ts,proto3" json:"Ts,omitempty"`
}

func (x *UnSubscribeMessage_ResponseMessage) Reset() {
	*x = UnSubscribeMessage_ResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv2messages_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnSubscribeMessage_ResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnSubscribeMessage_ResponseMessage) ProtoMessage() {}

func (x *UnSubscribeMessage_ResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv2messages_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnSubscribeMessage_ResponseMessage.ProtoReflect.Descriptor instead.
func (*UnSubscribeMessage_ResponseMessage) Descriptor() ([]byte, []int) {
	return file_VISSv2messages_proto_rawDescGZIP(), []int{6, 1}
}

func (x *UnSubscribeMessage_ResponseMessage) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *UnSubscribeMessage_ResponseMessage) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_SUCCESS
}

func (x *UnSubscribeMessage_ResponseMessage) GetErrorResponse() *ErrorResponseMessage {
	if x != nil {
		return x.ErrorResponse
	}
	return nil
}

func (x *UnSubscribeMessage_ResponseMessage) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *UnSubscribeMessage_ResponseMessage) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

var File_VISSv2messages_proto protoreflect.FileDescriptor

var file_VISSv2messages_proto_rawDesc = []byte{
	0x0a, 0x14, 0x56, 0x49, 0x53, 0x53, 0x76, 0x32, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x14, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x06, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xfe, 0x0f, 0x0a,
	0x11, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x52, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x1a, 0x94, 0x0f, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x05, 0x46,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x46, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x56, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x40, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xca, 0x0c, 0x0a, 0x0b, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x70, 0x0a, 0x0a, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x2e, 0x50, 0x61, 0x74, 0x68, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x88, 0x01, 0x01, 0x12, 0x7c, 0x0a, 0x0e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x62, 0x61, 0x73, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x62, 0x61, 0x73, 0x65, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x01, 0x52, 0x0e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x62, 0x61, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x6b, 0x0a, 0x0a, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x73, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x02, 0x52, 0x0b, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x79, 0x0a, 0x0d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x75, 0x72, 0x76, 0x65, 0x6c, 0x6f, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x76, 0x65, 0x6c, 0x6f, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x03, 0x52, 0x0d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x75, 0x72, 0x76,
	0x65, 0x6c, 0x6f, 0x67, 0x88, 0x01, 0x01, 0x12, 0x76, 0x0a, 0x0c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x04, 0x52, 0x0c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x8b, 0x01, 0x0a, 0x13, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x05, 0x52, 0x13, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x8e, 0x01,
	0x0a, 0x14, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x06, 0x52, 0x14, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x1a, 0x30,
	0x0a, 0x0a, 0x50, 0x61, 0x74, 0x68, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x1a, 0x28, 0x0a, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x62, 0x61, 0x73, 0x65, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x1a, 0x4e, 0x0a, 0x0a, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69,
	0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x1a, 0x47, 0x0a, 0x0b, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x6f, 0x67,
	0x69, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x69, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44,
	0x69, 0x66, 0x66, 0x1a, 0x41, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x76, 0x65, 0x6c, 0x6f, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x78, 0x45, 0x72, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x61, 0x78, 0x45, 0x72, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x42, 0x75, 0x66, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42,
	0x75, 0x66, 0x53, 0x69, 0x7a, 0x65, 0x1a, 0x2e, 0x0a, 0x0c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x69, 0x6d, 0x65,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x1a, 0x29, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x72, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x72, 0x65,
	0x65, 0x1a, 0x3e, 0x0a, 0x14, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x62, 0x61,
	0x73, 0x65, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x75, 0x72,
	0x76, 0x65, 0x6c, 0x6f, 0x67, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x17,
	0x0a, 0x15, 0x5f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x83, 0x01, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x41, 0x54, 0x48, 0x53, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45, 0x42, 0x41, 0x53, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x43,
	0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x55, 0x52, 0x56, 0x45,
	0x4c, 0x4f, 0x47, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59,
	0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x5f, 0x4d, 0x45, 0x54,
	0x41, 0x44, 0x41, 0x54, 0x41, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x59, 0x4e, 0x41, 0x4d,
	0x49, 0x43, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x10, 0x07, 0x22, 0xc9, 0x02,
	0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x3e,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0xf8,
	0x01, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x17,
	0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x50, 0x61, 0x74, 0x68, 0x43,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x05, 0x50, 0x61, 0x74, 0x68, 0x43, 0x88,
	0x01, 0x01, 0x12, 0x44, 0x0a, 0x02, 0x44, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x02, 0x44, 0x70, 0x1a, 0x5c, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x13, 0x0a, 0x02, 0x54,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x54, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x15, 0x0a, 0x03, 0x54, 0x73, 0x43, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52,
	0x03, 0x54, 0x73, 0x43, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x54, 0x73, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x54, 0x73, 0x43, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x50, 0x61, 0x74, 0x68, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x50, 0x61, 0x74, 0x68, 0x43, 0x22, 0x95, 0x08, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x4d, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x01, 0x52, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x1a, 0xdf, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x40, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x29, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x1a, 0xbb, 0x04, 0x0a, 0x0f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x72, 0x0a, 0x0f, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x51, 0x0a, 0x0d,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x01, 0x52, 0x0d, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x21, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x02, 0x54, 0x73, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x54, 0x73, 0x43, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x03, 0x54, 0x73, 0x43, 0x88, 0x01, 0x01, 0x1a, 0x94,
	0x01, 0x0a, 0x16, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x48, 0x00, 0x52, 0x08, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x54, 0x73,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x54, 0x73, 0x43, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x94, 0x05, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x33, 0x0a, 0x05, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05,
	0x4d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x4d, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x01, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01,
	0x1a, 0xa8, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x29, 0x0a,
	0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x1a, 0xf1, 0x01, 0x0a, 0x0f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x38, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x51, 0x0a, 0x0d, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x73, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd3, 0x0a, 0x0a, 0x10, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a,
	0x05, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x4d, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x53, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x01, 0x52, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x5f, 0x0a, 0x0c, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x02, 0x52, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x1a, 0xcc, 0x01, 0x0a, 0x0e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x40, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1c,
	0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x86, 0x02, 0x0a, 0x0f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x51, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x73,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x1a, 0xff, 0x03, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x38, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x7c, 0x0a, 0x0f,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x51, 0x0a, 0x0d, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x01, 0x52, 0x0d, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a,
	0x02, 0x54, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x02, 0x54, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x54, 0x73, 0x43, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x03, 0x52, 0x03, 0x54, 0x73, 0x43, 0x88, 0x01, 0x01, 0x1a, 0x54, 0x0a, 0x16, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x54, 0x73, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x54, 0x73, 0x43, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x94,
	0x05, 0x0a, 0x12, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x05, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x52, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x55,
	0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x55,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x01, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x88, 0x01, 0x01, 0x1a, 0x69, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x1a, 0x99, 0x02, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x51, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x0e, 0x0a, 0x02,
	0x54, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x73, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf6, 0x02, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x03, 0x47, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x01, 0x52, 0x03, 0x53, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x09,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x02, 0x52, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x0b, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x03,
	0x52, 0x0b, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x47, 0x65, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x53, 0x65, 0x74,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2a, 0x41,
	0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x07, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x45, 0x54, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x10, 0x02,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x10,
	0x03, 0x2a, 0x3a, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4e,
	0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x2a, 0x28, 0x0a,
	0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_VISSv2messages_proto_rawDescOnce sync.Once
	file_VISSv2messages_proto_rawDescData = file_VISSv2messages_proto_rawDesc
)

func file_VISSv2messages_proto_rawDescGZIP() []byte {
	file_VISSv2messages_proto_rawDescOnce.Do(func() {
		file_VISSv2messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_VISSv2messages_proto_rawDescData)
	})
	return file_VISSv2messages_proto_rawDescData
}

var file_VISSv2messages_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_VISSv2messages_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_VISSv2messages_proto_goTypes = []interface{}{
	(MessageMethod)(0),  // 0: protobufMessages.MessageMethod
	(MessageType)(0),    // 1: protobufMessages.MessageType
	(ResponseStatus)(0), // 2: protobufMessages.ResponseStatus
	(FilterExpressions_FilterExpression_FilterType)(0),                          // 3: protobufMessages.FilterExpressions.FilterExpression.FilterType
	(*ErrorResponseMessage)(nil),                                                // 4: protobufMessages.ErrorResponseMessage
	(*FilterExpressions)(nil),                                                   // 5: protobufMessages.FilterExpressions
	(*DataPackages)(nil),                                                        // 6: protobufMessages.DataPackages
	(*GetMessage)(nil),                                                          // 7: protobufMessages.GetMessage
	(*SetMessage)(nil),                                                          // 8: protobufMessages.SetMessage
	(*SubscribeMessage)(nil),                                                    // 9: protobufMessages.SubscribeMessage
	(*UnSubscribeMessage)(nil),                                                  // 10: protobufMessages.UnSubscribeMessage
	(*ProtobufMessage)(nil),                                                     // 11: protobufMessages.ProtobufMessage
	(*FilterExpressions_FilterExpression)(nil),                                  // 12: protobufMessages.FilterExpressions.FilterExpression
	(*FilterExpressions_FilterExpression_FilterValue)(nil),                      // 13: protobufMessages.FilterExpressions.FilterExpression.FilterValue
	(*FilterExpressions_FilterExpression_FilterValue_PathsValue)(nil),           // 14: protobufMessages.FilterExpressions.FilterExpression.FilterValue.PathsValue
	(*FilterExpressions_FilterExpression_FilterValue_TimebasedValue)(nil),       // 15: protobufMessages.FilterExpressions.FilterExpression.FilterValue.TimebasedValue
	(*FilterExpressions_FilterExpression_FilterValue_RangeValue)(nil),           // 16: protobufMessages.FilterExpressions.FilterExpression.FilterValue.RangeValue
	(*FilterExpressions_FilterExpression_FilterValue_ChangeValue)(nil),          // 17: protobufMessages.FilterExpressions.FilterExpression.FilterValue.ChangeValue
	(*FilterExpressions_FilterExpression_FilterValue_CurvelogValue)(nil),        // 18: protobufMessages.FilterExpressions.FilterExpression.FilterValue.CurvelogValue
	(*FilterExpressions_FilterExpression_FilterValue_HistoryValue)(nil),         // 19: protobufMessages.FilterExpressions.FilterExpression.FilterValue.HistoryValue
	(*FilterExpressions_FilterExpression_FilterValue_StaticMetadataValue)(nil),  // 20: protobufMessages.FilterExpressions.FilterExpression.FilterValue.StaticMetadataValue
	(*FilterExpressions_FilterExpression_FilterValue_DynamicMetadataValue)(nil), // 21: protobufMessages.FilterExpressions.FilterExpression.FilterValue.DynamicMetadataValue
	(*DataPackages_DataPackage)(nil),                                            // 22: protobufMessages.DataPackages.DataPackage
	(*DataPackages_DataPackage_DataPoint)(nil),                                  // 23: protobufMessages.DataPackages.DataPackage.DataPoint
	(*GetMessage_RequestMessage)(nil),                                           // 24: protobufMessages.GetMessage.RequestMessage
	(*GetMessage_ResponseMessage)(nil),                                          // 25: protobufMessages.GetMessage.ResponseMessage
	(*GetMessage_ResponseMessage_SuccessResponseMessage)(nil),                   // 26: protobufMessages.GetMessage.ResponseMessage.SuccessResponseMessage
	(*SetMessage_RequestMessage)(nil),                                           // 27: protobufMessages.SetMessage.RequestMessage
	(*SetMessage_ResponseMessage)(nil),                                          // 28: protobufMessages.SetMessage.ResponseMessage
	(*SubscribeMessage_RequestMessage)(nil),                                     // 29: protobufMessages.SubscribeMessage.RequestMessage
	(*SubscribeMessage_ResponseMessage)(nil),                                    // 30: protobufMessages.SubscribeMessage.ResponseMessage
	(*SubscribeMessage_NotificationMessage)(nil),                                // 31: protobufMessages.SubscribeMessage.NotificationMessage
	(*SubscribeMessage_NotificationMessage_SuccessResponseMessage)(nil),         // 32: protobufMessages.SubscribeMessage.NotificationMessage.SuccessResponseMessage
	(*UnSubscribeMessage_RequestMessage)(nil),                                   // 33: protobufMessages.UnSubscribeMessage.RequestMessage
	(*UnSubscribeMessage_ResponseMessage)(nil),                                  // 34: protobufMessages.UnSubscribeMessage.ResponseMessage
}
var file_VISSv2messages_proto_depIdxs = []int32{
	12, // 0: protobufMessages.FilterExpressions.FilterExp:type_name -> protobufMessages.FilterExpressions.FilterExpression
	22, // 1: protobufMessages.DataPackages.Data:type_name -> protobufMessages.DataPackages.DataPackage
	1,  // 2: protobufMessages.GetMessage.MType:type_name -> protobufMessages.MessageType
	24, // 3: protobufMessages.GetMessage.Request:type_name -> protobufMessages.GetMessage.RequestMessage
	25, // 4: protobufMessages.GetMessage.Response:type_name -> protobufMessages.GetMessage.ResponseMessage
	1,  // 5: protobufMessages.SetMessage.MType:type_name -> protobufMessages.MessageType
	27, // 6: protobufMessages.SetMessage.Request:type_name -> protobufMessages.SetMessage.RequestMessage
	28, // 7: protobufMessages.SetMessage.Response:type_name -> protobufMessages.SetMessage.ResponseMessage
	1,  // 8: protobufMessages.SubscribeMessage.MType:type_name -> protobufMessages.MessageType
	29, // 9: protobufMessages.SubscribeMessage.Request:type_name -> protobufMessages.SubscribeMessage.RequestMessage
	30, // 10: protobufMessages.SubscribeMessage.Response:type_name -> protobufMessages.SubscribeMessage.ResponseMessage
	31, // 11: protobufMessages.SubscribeMessage.Notification:type_name -> protobufMessages.SubscribeMessage.NotificationMessage
	1,  // 12: protobufMessages.UnSubscribeMessage.MType:type_name -> protobufMessages.MessageType
	33, // 13: protobufMessages.UnSubscribeMessage.Request:type_name -> protobufMessages.UnSubscribeMessage.RequestMessage
	34, // 14: protobufMessages.UnSubscribeMessage.Response:type_name -> protobufMessages.UnSubscribeMessage.ResponseMessage
	0,  // 15: protobufMessages.ProtobufMessage.Method:type_name -> protobufMessages.MessageMethod
	7,  // 16: protobufMessages.ProtobufMessage.Get:type_name -> protobufMessages.GetMessage
	8,  // 17: protobufMessages.ProtobufMessage.Set:type_name -> protobufMessages.SetMessage
	9,  // 18: protobufMessages.ProtobufMessage.Subscribe:type_name -> protobufMessages.SubscribeMessage
	10, // 19: protobufMessages.ProtobufMessage.UnSubscribe:type_name -> protobufMessages.UnSubscribeMessage
	3,  // 20: protobufMessages.FilterExpressions.FilterExpression.FType:type_name -> protobufMessages.FilterExpressions.FilterExpression.FilterType
	13, // 21: protobufMessages.FilterExpressions.FilterExpression.Value:type_name -> protobufMessages.FilterExpressions.FilterExpression.FilterValue
	14, // 22: protobufMessages.FilterExpressions.FilterExpression.FilterValue.ValuePaths:type_name -> protobufMessages.FilterExpressions.FilterExpression.FilterValue.PathsValue
	15, // 23: protobufMessages.FilterExpressions.FilterExpression.FilterValue.ValueTimebased:type_name -> protobufMessages.FilterExpressions.FilterExpression.FilterValue.TimebasedValue
	16, // 24: protobufMessages.FilterExpressions.FilterExpression.FilterValue.ValueRange:type_name -> protobufMessages.FilterExpressions.FilterExpression.FilterValue.RangeValue
	17, // 25: protobufMessages.FilterExpressions.FilterExpression.FilterValue.ValueChange:type_name -> protobufMessages.FilterExpressions.FilterExpression.FilterValue.ChangeValue
	18, // 26: protobufMessages.FilterExpressions.FilterExpression.FilterValue.ValueCurvelog:type_name -> protobufMessages.FilterExpressions.FilterExpression.FilterValue.CurvelogValue
	19, // 27: protobufMessages.FilterExpressions.FilterExpression.FilterValue.ValueHistory:type_name -> protobufMessages.FilterExpressions.FilterExpression.FilterValue.HistoryValue
	20, // 28: protobufMessages.FilterExpressions.FilterExpression.FilterValue.ValueStaticMetadata:type_name -> protobufMessages.FilterExpressions.FilterExpression.FilterValue.StaticMetadataValue
	21, // 29: protobufMessages.FilterExpressions.FilterExpression.FilterValue.ValueDynamicMetadata:type_name -> protobufMessages.FilterExpressions.FilterExpression.FilterValue.DynamicMetadataValue
	23, // 30: protobufMessages.DataPackages.DataPackage.Dp:type_name -> protobufMessages.DataPackages.DataPackage.DataPoint
	5,  // 31: protobufMessages.GetMessage.RequestMessage.Filter:type_name -> protobufMessages.FilterExpressions
	2,  // 32: protobufMessages.GetMessage.ResponseMessage.Status:type_name -> protobufMessages.ResponseStatus
	26, // 33: protobufMessages.GetMessage.ResponseMessage.SuccessResponse:type_name -> protobufMessages.GetMessage.ResponseMessage.SuccessResponseMessage
	4,  // 34: protobufMessages.GetMessage.ResponseMessage.ErrorResponse:type_name -> protobufMessages.ErrorResponseMessage
	6,  // 35: protobufMessages.GetMessage.ResponseMessage.SuccessResponseMessage.DataPack:type_name -> protobufMessages.DataPackages
	2,  // 36: protobufMessages.SetMessage.ResponseMessage.Status:type_name -> protobufMessages.ResponseStatus
	4,  // 37: protobufMessages.SetMessage.ResponseMessage.ErrorResponse:type_name -> protobufMessages.ErrorResponseMessage
	5,  // 38: protobufMessages.SubscribeMessage.RequestMessage.Filter:type_name -> protobufMessages.FilterExpressions
	2,  // 39: protobufMessages.SubscribeMessage.ResponseMessage.Status:type_name -> protobufMessages.ResponseStatus
	4,  // 40: protobufMessages.SubscribeMessage.ResponseMessage.ErrorResponse:type_name -> protobufMessages.ErrorResponseMessage
	2,  // 41: protobufMessages.SubscribeMessage.NotificationMessage.Status:type_name -> protobufMessages.ResponseStatus
	32, // 42: protobufMessages.SubscribeMessage.NotificationMessage.SuccessResponse:type_name -> protobufMessages.SubscribeMessage.NotificationMessage.SuccessResponseMessage
	4,  // 43: protobufMessages.SubscribeMessage.NotificationMessage.ErrorResponse:type_name -> protobufMessages.ErrorResponseMessage
	6,  // 44: protobufMessages.SubscribeMessage.NotificationMessage.SuccessResponseMessage.DataPack:type_name -> protobufMessages.DataPackages
	2,  // 45: protobufMessages.UnSubscribeMessage.ResponseMessage.Status:type_name -> protobufMessages.ResponseStatus
	4,  // 46: protobufMessages.UnSubscribeMessage.ResponseMessage.ErrorResponse:type_name -> protobufMessages.ErrorResponseMessage
	47, // [47:47] is the sub-list for method output_type
	47, // [47:47] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_VISSv2messages_proto_init() }
func file_VISSv2messages_proto_init() {
	if File_VISSv2messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_VISSv2messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPackages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnSubscribeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtobufMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression_FilterValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression_FilterValue_PathsValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression_FilterValue_TimebasedValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression_FilterValue_RangeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression_FilterValue_ChangeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression_FilterValue_CurvelogValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression_FilterValue_HistoryValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression_FilterValue_StaticMetadataValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression_FilterValue_DynamicMetadataValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPackages_DataPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPackages_DataPackage_DataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessage_RequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessage_ResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessage_ResponseMessage_SuccessResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMessage_RequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMessage_ResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeMessage_RequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeMessage_ResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeMessage_NotificationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeMessage_NotificationMessage_SuccessResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnSubscribeMessage_RequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv2messages_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnSubscribeMessage_ResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_VISSv2messages_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_VISSv2messages_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_VISSv2messages_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_VISSv2messages_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_VISSv2messages_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_VISSv2messages_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_VISSv2messages_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_VISSv2messages_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_VISSv2messages_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_VISSv2messages_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_VISSv2messages_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_VISSv2messages_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_VISSv2messages_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_VISSv2messages_proto_msgTypes[24].OneofWrappers = []interface{}{}
	file_VISSv2messages_proto_msgTypes[25].OneofWrappers = []interface{}{}
	file_VISSv2messages_proto_msgTypes[26].OneofWrappers = []interface{}{}
	file_VISSv2messages_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_VISSv2messages_proto_msgTypes[29].OneofWrappers = []interface{}{}
	file_VISSv2messages_proto_msgTypes[30].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_VISSv2messages_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_VISSv2messages_proto_goTypes,
		DependencyIndexes: file_VISSv2messages_proto_depIdxs,
		EnumInfos:         file_VISSv2messages_proto_enumTypes,
		MessageInfos:      file_VISSv2messages_proto_msgTypes,
	}.Build()
	File_VISSv2messages_proto = out.File
	file_VISSv2messages_proto_rawDesc = nil
	file_VISSv2messages_proto_goTypes = nil
	file_VISSv2messages_proto_depIdxs = nil
}
